<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    <!-- 引入properties文件 -->
    <context:property-placeholder location="WEB-INF/appConfig.properties"/>
    <!-- 定义数据库连接池数据源bean destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 设置JDBC驱动名称 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <!-- 设置JDBC连接URL -->
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <!-- 设置数据库用户名 -->
        <property name="user" value="${jdbc.username}"/>
        <!-- 设置数据库密码 -->
        <property name="password" value="${jdbc.password}"/>
        <!-- 设置连接池初始值 -->
        <property name="initialPoolSize" value="5"/>
        <property name="maxIdleTime" value="5000"/>
        <property name="maxPoolSize" value="20"/>
        <property name="minPoolSize" value="1"/>
    </bean>

    <!-- 配置sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- mappingResources属性用来列出全部映射文件 -->
        <!--<property name="mappingResources">-->
            <!--<list>-->
                 <!--&lt;!&ndash;以下用来列出Hibernate映射文件 &ndash;&gt;-->
                <!--<value></value>-->
                <!--<value>classpath:com/seed/Entity/AppTableEntity.hbm.xml</value>-->
            <!--</list>-->
        <!--</property>-->
        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <value>
                <!-- 设置数据库方言 -->
                hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
                <!--hibernate.dialect=org.hibernate.dialect.MySQLDialect-->
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                hibernate.hbm2ddl.auto=update
                <!-- 是否在控制台显示sql -->
                hibernate.show_sql=true
                <!-- 是否格式化sql，优化显示 -->
                hibernate.format_sql=true
                <!--开启二级缓存-->
                hibernate.cache.use_second_level_cache=true
                <!--设置二级缓存的提供者-->
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
        </property>
    </bean>

    <!-- 定义事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- annotation事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 定义切面，在 * tdxy.*.service.*ServiceImpl.*(..) 中执行有关的hibernate session的事务操作 -->
    <!--<aop:config>-->
    <!--<aop:pointcut id="serviceOperation" expression="execution(* tdxy.*.service.*Service.*(..))" />-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />-->
    <!--</aop:config>-->
</beans>